const g="data:text/markdown;base64,IyBNYSBkw6lnb29nbGlzYXRpb24gKGTDqS1HQUZBTWlzYXRpb24pCgojIyBMZXMgYWx0ZXJuYXRpdmVzIHF1ZSBqJ3V0aWxpc2UKCnwgKipTZXJ2aWNlKiogICAgICAgICAgICAgICAgICAgICAgIHwgKipBbHRlcm5hdGl2ZSoqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAqKk5vdGUqKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfAp8IEdvb2dsZSBDaHJvbWUgICAgICAgICAgICAgICAgICAgICB8IFtaZW4gQnJvd3Nlcl0oaHR0cHM6Ly96ZW4tYnJvd3Nlci5hcHApICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgR29vZ2xlIChtb3RldXIgZGUgcmVjaGVyY2hlKSAgICAgIHwgW1F3YW50XShodHRwczovL3d3dy5xd2FudC5jb20pICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCBHb29nbGUgQ2FsZW5kYXIgJiBHb29nbGUgQ29udGFjdHMgfCBbRnJhbWFnZW5kYV0oaHR0cHM6Ly9mcmFtYWdlbmRhLm9yZykgcG91ciBsJ2jDqWJlcmdlbWVudCwgW1RodW5kZXJiaXJkXShodHRwczovL3d3dy50aHVuZGVyYmlyZC5uZXQpIGNvbW1lIGNsaWVudCBQQywgU2Ftc3VuZyBDYWxlbmRhciAmIENvbnRhY3RzIHN1ciBtb2JpbGUgfCBKJ3V0aWxpc2UgW0RBVng1XShodHRwczovL3d3dy5kYXZ4NS5jb20vKSBwb3VyIGxhIHN5bmNocm9uaXNhdGlvbiBzdXIgbW9iaWxlIHwKfCBHb29nbGUgVHJhbnNsYXRlICAgICAgICAgICAgICAgICAgfCBbRGVlcExdKGh0dHBzOi8vd3d3LmRlZXBsLmNvbSkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IEdvb2dsZSBQaG90b3MgICAgICAgICAgICAgICAgICAgICB8IFtFbnRlXShodHRwczovL2VudGUuaW8pICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMTBHbyBkZSBzdG9ja2FnZSBncmF0dWl0IGVuIHV0aWxpc2FudCB1biBjb2RlIGRlIHBhcnJhaW5hZ2UgICAgICAgICAgICAgICAgICB8CgojIyBQb3VycXVvaQoKRsOpdnJpZXIgMjAyNSAtIEonYWkgcsOpYWxpc8OpIMOgIHF1ZWwgcG9pbnQgamUgc3VpcyBkZXZlbnUgZMOpcGVuZGFudCBkZXMgb3V0aWxzIEdvb2dsZS4gUGFzIHNldWxlbWVudCBHb29nbGUsIGxhIHBsdXBhcnQgZGVzIHNlcnZpY2VzIG51bcOpcmlxdWVzIHF1ZSBqJ3V0aWxpc2UgYXVqb3VyZCdodWkgc29udCBhbcOpcmljYWlucy4gSmUgc291aGFpdGUgcsOpZHVpcmUgY2V0dGUgZMOpcGVuZGFuY2UgcG91ciBkZXV4IHJhaXNvbnMgc2ltcGxlcyA6CgotIMOJdsOobmVtZW50cyBwb2xpdGlxdWUgcsOpY2VudHMgYXV4IMOJdGF0cy1VbmlzLCBldCBsZXMgZ8OpYW50cyBkZSBsYSB0ZWNoIHF1aSBsZXMgb250IHNvdXRlbnVzCi0gU291aGFpdCBkZSBmYWlyZSBtYXJjaGVyIGxhIGNvbmN1cnJlbmNlIHF1aSBwcm9maXRlIHRvdWpvdXJzIGF1eCBjb25zb21tYXRldXJzCgpNb24gb2JqZWN0aWYgZXN0IGQnYXVnbWVudGVyIG1hIGNvbnNvbW1hdGlvbiBkJ2FsdGVybmF0aXZlcyBldXJvcMOpZW5uZXMgZXQgb3Blbi1zb3VyY2UuIEplIG4nZXhjbHVzIHBhcyBsZXMgYWx0ZXJuYXRpdmVzIGFtw6lyaWNhaW5lcywgdGFudCBxdSdlbGxlcyBuZSBzb250IHBhcyBsacOpZXMgYXV4IEdBRkFNLgoKIyMgTGllbnMgdXRpbGVzCgotIFtEw6lnb29nbGlzb25zIEludGVybmV0XShodHRwczovL2RlZ29vZ2xpc29ucy1pbnRlcm5ldC5vcmcpCi0gW0V1cm9wZWFuIGFsdGVybmF0aXZlc10oaHR0cHM6Ly9ldXJvcGVhbi1hbHRlcm5hdGl2ZXMuZXUvKQo=";export{g as default};
